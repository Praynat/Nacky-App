name: Build APK (Flutter)

on:
  workflow_dispatch:   # permet de lancer manuellement depuis l’onglet Actions
  push:
    tags: ["v*"]       # build automatique uniquement quand tu crées un tag (ex: v1.0.0)

jobs:
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # nécessaire pour publier une Release lors d’un tag

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          # flutter-version: "3.22.2"   # optionnel: verrouiller une version précise

      - name: Analyze (non-fatal)
        run: flutter analyze --no-fatal-warnings --no-fatal-infos

      - name: Install dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload artifact (APK)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
          retention-days: 7

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: build/app/outputs/flutter-apk/app-debug.apk
          generate_release_notes: true
